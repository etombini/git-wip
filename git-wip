#! /bin/bash


function usage() {
    echo "Usage: git wip get|push [remote]"
    return 0
}

function git_wip_push() {
    git fetch --prune
    local remote
    remote=${1:-origin}
    local branch
    branch=wip-$(date +"%Y-%m-%dT%H-%M-%S")

    if ! git checkout -b "$branch"; then
        >&2 echo "ERROR: can not checkout branch $branch"
        exit 1
    fi 
    if ! git add -A; then
        >&2 echo "ERROR: can not add files to index"
        exit 1
    fi
    
    git commit -m "$branch"

    if ! git push -u "$remote" "$branch"; then
        >&2 echo "ERROR: can not push branch $branch to remote $remote"
        exit 1
    fi

    local remote_wips
    remote_wips=$(git branch -r | grep "$remote" |grep -o "wip-.*" |grep -v "$branch")
    for remote_wip in $remote_wips; do
        if ! git push "$remote" :"$remote_wip"; then
            >&2 echo "ERROR: can not delete branch $remote_wip from $remote"
        fi
        if ! git branch -d "$remote_wip"; then
            >&2 echo "ERROR: can not delete local branch $remote_wip"
        fi
    done
    return 0
}

function git_wip_get() {
    git fetch --prune
    local last_remote_wip
    last_remote_wip=$(git branch -r |grep -o "wip-.*" | tail -1 | sed -e 's#remotes/origin/##')
    git checkout "$last_remote_wip"
    return 0
}

if [ $# -lt 1 ]; then
    usage
    exit 1
fi


if [ "$1" == "get" ]; then
    git_wip_get "$2"
    exit 0
fi

if [ "$1" == "push" ]; then
    git_wip_push "$2"
    exit 0
fi

>&2 echo "git wip: Illegal option $1"
usage
exit 1


